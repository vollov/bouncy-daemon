#!/bin/bash
### BEGIN INIT INFO
# Provides: bouncyd
# Required-Start: $all
# Required-Stop: $all
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: bouncy daemon startup script
# Description: bouncy daemon startup script
### END INIT INFO

# Source function library.
#. /etc/init.d/functions
. /lib/lsb/init-functions

RETVAL=0
prog="bouncy"
desc="port forward daemon"
DIR=/var/www/bouncy
lock_dir=/var/lock

start() {

    if [ ! -f "$lock_dir/$prog" ]
    then
        printf "Starting $desc ($prog)...\n "
        nohup "$prog" "$DIR/routes.json" 80 1>>"/var/log/bouncy.log" 2>&1 &
        RETVAL=$?
        [ $RETVAL -eq 0 ] && save_pid
    else
        printf "$desc ($prog) is running\n"
        RETVAL=0
    fi
    echo
    return $RETVAL
}

save_pid() {
    echo `ps aux | grep bouncy | grep -v grep | awk '{print $2}'` > "$lock_dir/$prog"
    echo `cat "$lock_dir/$prog" | cut -d ' ' -f 2` > "$lock_dir/$prog"
}

stop() {
    if [ ! -f "$lock_dir/$prog" ]
    then
        printf "$desc ($prog) is stopped"
        RETVAL=0
    else
        printf "Shutting down $desc ($prog): "
        kill `cat $lock_dir/$prog`
        RETVAL=$?
        [ $RETVAL -eq 0 ] && rm -f "$lock_dir/$prog"
    fi
    echo
    return $RETVAL
}

# check status by check $DIR/pids/bouncy.pid
status() {
    
    if [ ! -f "$lock_dir/$prog" ]
    then
        printf "$prog is NOT running\n"
    else
        printf "$prog is running ($_pid)\n"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
    echo $"Usage: $0 {start|stop|status|restart}"
    RETVAL=1
esac

exit $RETVAL